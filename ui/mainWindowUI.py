# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindowUI.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(639, 549)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(570, 0))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.grouphorizontallayout = QtWidgets.QHBoxLayout()
        self.grouphorizontallayout.setObjectName("grouphorizontallayout")
        self.groupallbtn = QtWidgets.QPushButton(self.centralwidget)
        self.groupallbtn.setMinimumSize(QtCore.QSize(0, 0))
        self.groupallbtn.setMaximumSize(QtCore.QSize(25, 16777215))
        self.groupallbtn.setObjectName("groupallbtn")
        self.grouphorizontallayout.addWidget(self.groupallbtn)
        self.groupfilterbtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupfilterbtn.sizePolicy().hasHeightForWidth())
        self.groupfilterbtn.setSizePolicy(sizePolicy)
        self.groupfilterbtn.setMinimumSize(QtCore.QSize(25, 0))
        self.groupfilterbtn.setMaximumSize(QtCore.QSize(25, 16777215))
        self.groupfilterbtn.setCheckable(True)
        self.groupfilterbtn.setChecked(False)
        self.groupfilterbtn.setFlat(False)
        self.groupfilterbtn.setObjectName("groupfilterbtn")
        self.grouphorizontallayout.addWidget(self.groupfilterbtn)
        self.groupfilterline = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupfilterline.sizePolicy().hasHeightForWidth())
        self.groupfilterline.setSizePolicy(sizePolicy)
        self.groupfilterline.setMinimumSize(QtCore.QSize(50, 0))
        self.groupfilterline.setFrame(True)
        self.groupfilterline.setObjectName("groupfilterline")
        self.grouphorizontallayout.addWidget(self.groupfilterline)
        self.groupbox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupbox.sizePolicy().hasHeightForWidth())
        self.groupbox.setSizePolicy(sizePolicy)
        self.groupbox.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.groupbox.setObjectName("groupbox")
        self.grouphorizontallayout.addWidget(self.groupbox)
        self.groupfavouritebtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupfavouritebtn.sizePolicy().hasHeightForWidth())
        self.groupfavouritebtn.setSizePolicy(sizePolicy)
        self.groupfavouritebtn.setMinimumSize(QtCore.QSize(0, 0))
        self.groupfavouritebtn.setMaximumSize(QtCore.QSize(25, 16777215))
        self.groupfavouritebtn.setObjectName("groupfavouritebtn")
        self.grouphorizontallayout.addWidget(self.groupfavouritebtn)
        self.grouprenamebtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grouprenamebtn.sizePolicy().hasHeightForWidth())
        self.grouprenamebtn.setSizePolicy(sizePolicy)
        self.grouprenamebtn.setMinimumSize(QtCore.QSize(0, 0))
        self.grouprenamebtn.setMaximumSize(QtCore.QSize(25, 16777215))
        self.grouprenamebtn.setObjectName("grouprenamebtn")
        self.grouphorizontallayout.addWidget(self.grouprenamebtn)
        self.groupdeletebtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupdeletebtn.sizePolicy().hasHeightForWidth())
        self.groupdeletebtn.setSizePolicy(sizePolicy)
        self.groupdeletebtn.setMinimumSize(QtCore.QSize(0, 0))
        self.groupdeletebtn.setMaximumSize(QtCore.QSize(25, 16777215))
        self.groupdeletebtn.setObjectName("groupdeletebtn")
        self.grouphorizontallayout.addWidget(self.groupdeletebtn)
        self.groupnewbtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupnewbtn.sizePolicy().hasHeightForWidth())
        self.groupnewbtn.setSizePolicy(sizePolicy)
        self.groupnewbtn.setMinimumSize(QtCore.QSize(0, 0))
        self.groupnewbtn.setMaximumSize(QtCore.QSize(50, 16777215))
        self.groupnewbtn.setObjectName("groupnewbtn")
        self.grouphorizontallayout.addWidget(self.groupnewbtn)
        self.verticalLayout_2.addLayout(self.grouphorizontallayout)
        self.filterhorizontallayout = QtWidgets.QHBoxLayout()
        self.filterhorizontallayout.setObjectName("filterhorizontallayout")
        self.filterlbl = QtWidgets.QLabel(self.centralwidget)
        self.filterlbl.setObjectName("filterlbl")
        self.filterhorizontallayout.addWidget(self.filterlbl)
        self.filterreset = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.filterreset.sizePolicy().hasHeightForWidth())
        self.filterreset.setSizePolicy(sizePolicy)
        self.filterreset.setMinimumSize(QtCore.QSize(0, 0))
        self.filterreset.setMaximumSize(QtCore.QSize(25, 16777215))
        self.filterreset.setObjectName("filterreset")
        self.filterhorizontallayout.addWidget(self.filterreset)
        self.filterrecall = QtWidgets.QPushButton(self.centralwidget)
        self.filterrecall.setEnabled(False)
        self.filterrecall.setMaximumSize(QtCore.QSize(50, 16777215))
        self.filterrecall.setObjectName("filterrecall")
        self.filterhorizontallayout.addWidget(self.filterrecall)
        self.filterline = QtWidgets.QLineEdit(self.centralwidget)
        self.filterline.setObjectName("filterline")
        self.filterhorizontallayout.addWidget(self.filterline)
        self.verticalLayout_2.addLayout(self.filterhorizontallayout)
        self.trackstable = QtWidgets.QTableView(self.centralwidget)
        self.trackstable.setAlternatingRowColors(True)
        self.trackstable.setShowGrid(False)
        self.trackstable.setWordWrap(False)
        self.trackstable.setObjectName("trackstable")
        self.trackstable.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout_2.addWidget(self.trackstable)
        self.pagehorizontallayout = QtWidgets.QHBoxLayout()
        self.pagehorizontallayout.setObjectName("pagehorizontallayout")
        self.pagetrackslbl = QtWidgets.QLabel(self.centralwidget)
        self.pagetrackslbl.setObjectName("pagetrackslbl")
        self.pagehorizontallayout.addWidget(self.pagetrackslbl)
        self.pagemaxtracksline = QtWidgets.QLineEdit(self.centralwidget)
        self.pagemaxtracksline.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pagemaxtracksline.setObjectName("pagemaxtracksline")
        self.pagehorizontallayout.addWidget(self.pagemaxtracksline)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.pagehorizontallayout.addItem(spacerItem)
        self.pagepagelbl = QtWidgets.QLabel(self.centralwidget)
        self.pagepagelbl.setObjectName("pagepagelbl")
        self.pagehorizontallayout.addWidget(self.pagepagelbl)
        self.pageprevbtn = QtWidgets.QPushButton(self.centralwidget)
        self.pageprevbtn.setObjectName("pageprevbtn")
        self.pagehorizontallayout.addWidget(self.pageprevbtn)
        self.pagepageline = QtWidgets.QLineEdit(self.centralwidget)
        self.pagepageline.setMaximumSize(QtCore.QSize(80, 16777215))
        self.pagepageline.setObjectName("pagepageline")
        self.pagehorizontallayout.addWidget(self.pagepageline)
        self.pagemaxpagelbl = QtWidgets.QLabel(self.centralwidget)
        self.pagemaxpagelbl.setObjectName("pagemaxpagelbl")
        self.pagehorizontallayout.addWidget(self.pagemaxpagelbl)
        self.pagenextbtn = QtWidgets.QPushButton(self.centralwidget)
        self.pagenextbtn.setObjectName("pagenextbtn")
        self.pagehorizontallayout.addWidget(self.pagenextbtn)
        self.verticalLayout_2.addLayout(self.pagehorizontallayout)
        self.gridLayout.addLayout(self.verticalLayout_2, 3, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 639, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuTrack = QtWidgets.QMenu(self.menubar)
        self.menuTrack.setObjectName("menuTrack")
        self.menuTrackAddToGroup = QtWidgets.QMenu(self.menuTrack)
        self.menuTrackAddToGroup.setObjectName("menuTrackAddToGroup")
        self.menuTrackMerge = QtWidgets.QMenu(self.menuTrack)
        self.menuTrackMerge.setObjectName("menuTrackMerge")
        self.menuTrackInGroups = QtWidgets.QMenu(self.menuTrack)
        self.menuTrackInGroups.setObjectName("menuTrackInGroups")
        self.menuRating = QtWidgets.QMenu(self.menuTrack)
        self.menuRating.setObjectName("menuRating")
        self.menuTrackRelink = QtWidgets.QMenu(self.menuTrack)
        self.menuTrackRelink.setObjectName("menuTrackRelink")
        self.menuGroup = QtWidgets.QMenu(self.menubar)
        self.menuGroup.setObjectName("menuGroup")
        self.menuGroupNewImport = QtWidgets.QMenu(self.menuGroup)
        self.menuGroupNewImport.setObjectName("menuGroupNewImport")
        self.menuPage = QtWidgets.QMenu(self.menubar)
        self.menuPage.setObjectName("menuPage")
        self.menuFilter = QtWidgets.QMenu(self.menubar)
        self.menuFilter.setObjectName("menuFilter")
        self.menuFilterHistory = QtWidgets.QMenu(self.menuFilter)
        self.menuFilterHistory.setObjectName("menuFilterHistory")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionTrackNew = QtWidgets.QAction(MainWindow)
        self.actionTrackNew.setObjectName("actionTrackNew")
        self.actionTrackDelete = QtWidgets.QAction(MainWindow)
        self.actionTrackDelete.setObjectName("actionTrackDelete")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionGroupAllTracks = QtWidgets.QAction(MainWindow)
        self.actionGroupAllTracks.setObjectName("actionGroupAllTracks")
        self.actionGroupFavourite = QtWidgets.QAction(MainWindow)
        self.actionGroupFavourite.setObjectName("actionGroupFavourite")
        self.actionGroupDelete = QtWidgets.QAction(MainWindow)
        self.actionGroupDelete.setObjectName("actionGroupDelete")
        self.actionPageNext = QtWidgets.QAction(MainWindow)
        self.actionPageNext.setObjectName("actionPageNext")
        self.actionPagePrev = QtWidgets.QAction(MainWindow)
        self.actionPagePrev.setObjectName("actionPagePrev")
        self.actionImport = QtWidgets.QAction(MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionGroupRename = QtWidgets.QAction(MainWindow)
        self.actionGroupRename.setObjectName("actionGroupRename")
        self.actionGroupNew = QtWidgets.QAction(MainWindow)
        self.actionGroupNew.setObjectName("actionGroupNew")
        self.actionGroupImportCue = QtWidgets.QAction(MainWindow)
        self.actionGroupImportCue.setObjectName("actionGroupImportCue")
        self.actionGroupImportDirectory = QtWidgets.QAction(MainWindow)
        self.actionGroupImportDirectory.setObjectName("actionGroupImportDirectory")
        self.actionTrackToGroup = QtWidgets.QAction(MainWindow)
        self.actionTrackToGroup.setObjectName("actionTrackToGroup")
        self.actionTrackToggleNew = QtWidgets.QAction(MainWindow)
        self.actionTrackToggleNew.setObjectName("actionTrackToggleNew")
        self.actionFilterReset = QtWidgets.QAction(MainWindow)
        self.actionFilterReset.setObjectName("actionFilterReset")
        self.actionFilterPlaceholder = QtWidgets.QAction(MainWindow)
        self.actionFilterPlaceholder.setObjectName("actionFilterPlaceholder")
        self.actionTrackDetachedCopy = QtWidgets.QAction(MainWindow)
        self.actionTrackDetachedCopy.setObjectName("actionTrackDetachedCopy")
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuTrackAddToGroup.addSeparator()
        self.menuTrackMerge.addSeparator()
        self.menuTrackInGroups.addSeparator()
        self.menuTrack.addAction(self.actionTrackNew)
        self.menuTrack.addAction(self.actionTrackDelete)
        self.menuTrack.addSeparator()
        self.menuTrack.addAction(self.menuTrackMerge.menuAction())
        self.menuTrack.addAction(self.menuTrackAddToGroup.menuAction())
        self.menuTrack.addAction(self.menuTrackInGroups.menuAction())
        self.menuTrack.addAction(self.actionTrackDetachedCopy)
        self.menuTrack.addAction(self.menuTrackRelink.menuAction())
        self.menuTrack.addSeparator()
        self.menuTrack.addAction(self.menuRating.menuAction())
        self.menuTrack.addAction(self.actionTrackToggleNew)
        self.menuGroupNewImport.addAction(self.actionGroupNew)
        self.menuGroupNewImport.addAction(self.actionGroupImportCue)
        self.menuGroupNewImport.addAction(self.actionGroupImportDirectory)
        self.menuGroup.addAction(self.actionGroupAllTracks)
        self.menuGroup.addSeparator()
        self.menuGroup.addAction(self.menuGroupNewImport.menuAction())
        self.menuGroup.addAction(self.actionGroupDelete)
        self.menuGroup.addSeparator()
        self.menuGroup.addAction(self.actionGroupFavourite)
        self.menuGroup.addAction(self.actionGroupRename)
        self.menuPage.addAction(self.actionPageNext)
        self.menuPage.addAction(self.actionPagePrev)
        self.menuFilterHistory.addAction(self.actionFilterPlaceholder)
        self.menuFilter.addAction(self.actionFilterReset)
        self.menuFilter.addAction(self.menuFilterHistory.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTrack.menuAction())
        self.menubar.addAction(self.menuFilter.menuAction())
        self.menubar.addAction(self.menuGroup.menuAction())
        self.menubar.addAction(self.menuPage.menuAction())
        self.filterlbl.setBuddy(self.filterline)
        self.pagetrackslbl.setBuddy(self.pagemaxtracksline)
        self.pagepagelbl.setBuddy(self.pagepageline)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "regaudio"))
        self.groupallbtn.setToolTip(_translate("MainWindow", "<html><head/><body><p>all tracks</p><p>(click again to return to the previous group)</p></body></html>"))
        self.groupallbtn.setText(_translate("MainWindow", "|||"))
        self.groupfilterbtn.setToolTip(_translate("MainWindow", "filter groups"))
        self.groupfilterbtn.setText(_translate("MainWindow", "?"))
        self.groupfilterline.setToolTip(_translate("MainWindow", "you may use wildcards (*, ?)"))
        self.groupfavouritebtn.setToolTip(_translate("MainWindow", "toggle favorite"))
        self.groupfavouritebtn.setText(_translate("MainWindow", "*"))
        self.grouprenamebtn.setToolTip(_translate("MainWindow", "rename group"))
        self.grouprenamebtn.setText(_translate("MainWindow", "R"))
        self.groupdeletebtn.setToolTip(_translate("MainWindow", "remove group (but keep tracks)"))
        self.groupdeletebtn.setText(_translate("MainWindow", "-"))
        self.groupnewbtn.setToolTip(_translate("MainWindow", "add a group"))
        self.groupnewbtn.setText(_translate("MainWindow", "+"))
        self.filterlbl.setText(_translate("MainWindow", "Filter"))
        self.filterreset.setToolTip(_translate("MainWindow", "reset filter"))
        self.filterreset.setText(_translate("MainWindow", "x"))
        self.filterrecall.setToolTip(_translate("MainWindow", "recall previous filter"))
        self.filterrecall.setText(_translate("MainWindow", "~"))
        self.filterline.setToolTip(_translate("MainWindow", "<html><head/><body><p>two types of filter are recognized:</p><p>- a simple filter (all the fields are searched)</p><p>- an advanced filter (!a: for artist, !n: for name, !r: for rating, !r:&lt; lower rating, !r:&gt; higher rating, !*: new, !g:group) eg.:!a:Frank Sinatra !n:my way</p><p>filter is always case insensitive</p></body></html>"))
        self.pagetrackslbl.setText(_translate("MainWindow", "Tracks per page"))
        self.pagemaxtracksline.setText(_translate("MainWindow", "200"))
        self.pagepagelbl.setText(_translate("MainWindow", "Page"))
        self.pageprevbtn.setText(_translate("MainWindow", "< Prev"))
        self.pagepageline.setText(_translate("MainWindow", "1"))
        self.pagemaxpagelbl.setText(_translate("MainWindow", "/ 1"))
        self.pagenextbtn.setText(_translate("MainWindow", "Next >"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuTrack.setTitle(_translate("MainWindow", "&Track"))
        self.menuTrackAddToGroup.setTitle(_translate("MainWindow", "&Add to group"))
        self.menuTrackMerge.setTitle(_translate("MainWindow", "&Merge as"))
        self.menuTrackInGroups.setTitle(_translate("MainWindow", "&In groups"))
        self.menuRating.setTitle(_translate("MainWindow", "&Rating"))
        self.menuTrackRelink.setTitle(_translate("MainWindow", "Relink as &similar"))
        self.menuGroup.setTitle(_translate("MainWindow", "&Group"))
        self.menuGroupNewImport.setTitle(_translate("MainWindow", "&New group"))
        self.menuPage.setTitle(_translate("MainWindow", "&Page"))
        self.menuFilter.setTitle(_translate("MainWindow", "&Filter"))
        self.menuFilterHistory.setTitle(_translate("MainWindow", "&History"))
        self.actionTrackNew.setText(_translate("MainWindow", "&New entry"))
        self.actionTrackNew.setToolTip(_translate("MainWindow", "Add new track and edit it"))
        self.actionTrackNew.setShortcut(_translate("MainWindow", "N"))
        self.actionTrackDelete.setText(_translate("MainWindow", "&Delete"))
        self.actionTrackDelete.setShortcut(_translate("MainWindow", "Del"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionGroupAllTracks.setText(_translate("MainWindow", "&All tracks"))
        self.actionGroupFavourite.setText(_translate("MainWindow", "Toggle &favourite"))
        self.actionGroupDelete.setText(_translate("MainWindow", "&Delete group"))
        self.actionPageNext.setText(_translate("MainWindow", "&Next"))
        self.actionPageNext.setToolTip(_translate("MainWindow", "Next Page"))
        self.actionPagePrev.setText(_translate("MainWindow", "&Prev"))
        self.actionImport.setText(_translate("MainWindow", "&Import"))
        self.actionGroupRename.setText(_translate("MainWindow", "R&ename"))
        self.actionGroupNew.setText(_translate("MainWindow", "&Add empty group"))
        self.actionGroupImportCue.setText(_translate("MainWindow", "Import .&cue"))
        self.actionGroupImportDirectory.setText(_translate("MainWindow", "Import &directory"))
        self.actionTrackToGroup.setText(_translate("MainWindow", "Pick from all ..."))
        self.actionTrackToggleNew.setText(_translate("MainWindow", "&Toggle New"))
        self.actionTrackToggleNew.setShortcut(_translate("MainWindow", "."))
        self.actionFilterReset.setText(_translate("MainWindow", "&Reset"))
        self.actionFilterReset.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionFilterPlaceholder.setText(_translate("MainWindow", "placeholder"))
        self.actionTrackDetachedCopy.setText(_translate("MainWindow", "Detached &copy"))
        self.actionTrackDetachedCopy.setToolTip(_translate("MainWindow", "<html><head/><body><p>make a copy of the track and point the grouptrack to it</p><p>(only in groups)</p></body></html>"))

